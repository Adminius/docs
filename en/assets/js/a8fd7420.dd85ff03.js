"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[4772],{1003:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var s=t(5893),r=t(1151);const a={sidebar_position:7},l="Miscellaneous",o={id:"guides/faq",title:"Miscellaneous",description:"Example configurations",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/guides/faq.mdx",sourceDirName:"guides",slug:"/guides/faq",permalink:"/en/docs/guides/faq",draft:!1,unlisted:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current/guides/faq.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Charge Points",permalink:"/en/docs/guides/wallbox"},next:{title:"Chargers",permalink:"/en/docs/devices/chargers"}},i={},c=[{value:"Example configurations",id:"example-configurations",level:2},{value:"Shelly",id:"shelly",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"miscellaneous",children:"Miscellaneous"}),"\n",(0,s.jsx)(n.h2,{id:"example-configurations",children:"Example configurations"}),"\n",(0,s.jsx)(n.h3,{id:"shelly",children:"Shelly"}),"\n",(0,s.jsx)(n.p,{children:"In this example of how flexible evcc can be, we control a water heat pump."}),"\n",(0,s.jsx)(n.p,{children:'"Vehicle State of Charge" is used to show the current temperature of the water.'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Shelly 3EM as the Grid Supply Meter"}),"\n",(0,s.jsx)(n.li,{children:"Shelly EM as the Charge Meter"}),"\n",(0,s.jsx)(n.li,{children:"Shelly 1 as the Charger (opens/closes the Call for Water contact)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"network:\n  schema: http\n  host: evcc.local\n  port: 7070\n\ninterval: 10s\n\nlog: info\n\nmeters:\n  - name: grid\n    type: template\n    template: shelly-3em # Shelly 3EM as Grid Supply Meter\n    usage: grid\n    host: 192.168.178.28\n\n  - name: WP_Pwr\n    type: template\n    template: shelly-1pm # Shelly EM as the Charge Meter\n    #usage: charge\n    host: 192.168.178.21\n    channel: 1\n\nchargers:\n  - name: WP_SG\n    type: template\n    template: shelly # Shelly 1 opens and closes the Call for Water contact\n    host: 192.168.178.29\n    standbypower: -1\n\nvehicles:\n  - name: WP\n    type: custom\n    title: Hot Water Pump\n    icon: waterheater\n    phases: 1\n    onIdentify:\n      mode: pv\n      minsoc: 40\n      targetsoc: 60\n    soc:\n      source: mqtt\n      topic: House/Water_Temp\n\nloadpoints:\n  - title: HotWater\n    charger: WP_SG\n    meter: WP_Pwr\n    vehicle: WP\n    mode: pv\n    phases: 1\n    mincurrent: 2 # Consumes approximately 500w\n    maxcurrent: 3\n    enable:\n      threshold: 0\n      delay: 1m\n    disable:\n      threshold: 0\n      delay: 15m # Run for at least 15 minutes\n    guardduration: 15m # Pause for at least 15 minutes\n\nsite:\n  - title: Water\n    meters:\n      grid: grid\n\nmqtt:\n  broker: raspberrypi:1883\n  topic: evcc\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var s=t(7294);const r={},a=s.createContext(r);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);