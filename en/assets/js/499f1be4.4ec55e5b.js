"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[5339],{5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>P});var n=a(7462),r=a(7294),s=a(6010),o=a(2466),m=a(6550),l=a(1980),d=a(7392),p=a(12);function i(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??i(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function y(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function c(e){let{queryString:t=!1,groupId:a}=e;const n=(0,m.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,s=u(e),[o,m]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!y({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[l,d]=c({queryString:a,groupId:n}),[i,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:n}),g=(()=>{const e=l??i;return y({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{g&&m(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!y({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);m(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var g=a(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:m,selectValue:l,tabValues:d}=e;const p=[],{blockElementScrollPositionUntilNextRender:i}=(0,o.o5)(),u=e=>{const t=e.currentTarget,a=p.indexOf(t),n=d[a].value;n!==m&&(i(t),l(n))},y=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},d.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:m===t?0:-1,"aria-selected":m===t,key:t,ref:e=>p.push(e),onKeyDown:y,onClick:u},o,{className:(0,s.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":m===t})}),a??t)})))}function T(e){let{lazy:t,children:a,selectedValue:n}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function h(e){const t=b(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",v.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(T,(0,n.Z)({},e,t)))}function P(e){const t=(0,g.Z)();return r.createElement(h,(0,n.Z)({key:String(t)},e))}},3262:(e,t,a)=>{a.d(t,{ZP:()=>m});var n=a(7462),r=(a(7294),a(3905));a(8209);const s={toc:[]},o="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(o,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Sponsor Token Required",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"More information on \ud83d\udc9a evcc Sponsorship can be found ",(0,r.kt)("a",{parentName:"p",href:"/docs/sponsorship"},"here"),".")))}m.isMDXComponent=!0},5858:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>v,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),s=(a(8209),a(4866)),o=a(5162),m=a(3262);const l={sidebar_position:2},d="Meters / Site",p={unversionedId:"devices/meters",id:"devices/meters",title:"Meters / Site",description:"The devices on this page can all be used as energy measuring points (Meters) for various purposes, including",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/devices/meters.mdx",sourceDirName:"devices",slug:"/devices/meters",permalink:"/en/docs/devices/meters",draft:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current/devices/meters.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Chargers",permalink:"/en/docs/devices/chargers"},next:{title:"Vehicles",permalink:"/en/docs/devices/vehicles"}},i={},u=[{value:"ABB A43, A44, B23, B24",id:"abb-a43-a44-b23-b24",level:2},{value:"Acrel ADW300 Wireless Metering Meter",id:"acrel-adw300-wireless-metering-meter",level:2},{value:"Ads-tec StoraXe",id:"ads-tec-storaxe",level:2},{value:"Alpha ESS Storion SMILE",id:"alpha-ess-storion-smile",level:2},{value:"Bernecker Engineering MPM3PM",id:"bernecker-engineering-mpm3pm",level:2},{value:"Bosswerk MI series micro inverter",id:"bosswerk-mi-series-micro-inverter",level:2},{value:"Carlo Gavazzi",id:"carlo-gavazzi",level:2},{value:"EM/ET 330/340",id:"emet-330340",level:3},{value:"EM24",id:"em24",level:3},{value:"cFos PowerBrain Meter",id:"cfos-powerbrain-meter",level:2},{value:"Deye",id:"deye",level:2},{value:"SUN series micro inverter",id:"sun-series-micro-inverter",level:3},{value:"SUN-(5/6/8/10/12)K-SG04LP3-EU series hybrid inverter",id:"sun-5681012k-sg04lp3-eu-series-hybrid-inverter",level:3},{value:"Discovergy",id:"discovergy",level:2},{value:"DSMR",id:"dsmr",level:2},{value:"DZG DVH4013",id:"dzg-dvh4013",level:2},{value:"E3/DC",id:"e3dc",level:2},{value:"Eastron",id:"eastron",level:2},{value:"SDM120-Modbus",id:"sdm120-modbus",level:3},{value:"SDM220/230",id:"sdm220230",level:3},{value:"SDM630-Modbus",id:"sdm630-modbus",level:3},{value:"SDM72D-M",id:"sdm72d-m",level:3},{value:"SDM72DM-V2",id:"sdm72dm-v2",level:3},{value:"Enphase IQ Envoy",id:"enphase-iq-envoy",level:2},{value:"ESPHome DSMR",id:"esphome-dsmr",level:2},{value:"FENECON",id:"fenecon",level:2},{value:"FoxESS",id:"foxess",level:2},{value:"H1 Series Hybrid Inverter",id:"h1-series-hybrid-inverter",level:3},{value:"H3 Series Hybrid Inverter",id:"h3-series-hybrid-inverter",level:3},{value:"Fronius",id:"fronius",level:2},{value:"Primo GEN24 Plus",id:"primo-gen24-plus",level:3},{value:"Solar API V1",id:"solar-api-v1",level:3},{value:"Symo GEN24 Plus",id:"symo-gen24-plus",level:3},{value:"Ginlong Solis inverter",id:"ginlong-solis-inverter",level:2},{value:"go-e Controller",id:"go-e-controller",level:2},{value:"GoodWe ET/EH/BH/BT Hybrid Inverter",id:"goodwe-etehbhbt-hybrid-inverter",level:2},{value:"Growatt",id:"growatt",level:2},{value:"Hybrid Inverter",id:"hybrid-inverter",level:3},{value:"TL-X(H) Hybrid Inverter",id:"tl-xh-hybrid-inverter",level:3},{value:"HomeWizard Wi-Fi P1 Meter",id:"homewizard-wi-fi-p1-meter",level:2},{value:"Hoymiles HM and HMS Series (via OpenDTU)",id:"hoymiles-hm-and-hms-series-via-opendtu",level:2},{value:"Huawei",id:"huawei",level:2},{value:"SmartLogger",id:"smartlogger",level:3},{value:"SUN2000 via RS485 Modbus",id:"sun2000-via-rs485-modbus",level:3},{value:"SUN2000 with SDongle",id:"sun2000-with-sdongle",level:3},{value:"SUN2000 with SDongle &amp; Power Sensor",id:"sun2000-with-sdongle--power-sensor",level:3},{value:"IGEN Tech Solarman Logger",id:"igen-tech-solarman-logger",level:2},{value:"inepro PRO380-MOD",id:"inepro-pro380-mod",level:2},{value:"Janitza B series, UMG series",id:"janitza-b-series-umg-series",level:2},{value:"Kostal",id:"kostal",level:2},{value:"Piko (legacy)",id:"piko-legacy",level:3},{value:"Piko Hybrid",id:"piko-hybrid",level:3},{value:"Piko MP Plus",id:"piko-mp-plus",level:3},{value:"Piko, Piko BA",id:"piko-piko-ba",level:3},{value:"Plenticore Hybrid",id:"plenticore-hybrid",level:3},{value:"Smart Energy Meter",id:"smart-energy-meter",level:3},{value:"Smart Energy Meter (via inverter)",id:"smart-energy-meter-via-inverter",level:3},{value:"LG ESS Home 8/10",id:"lg-ess-home-810",level:2},{value:"M-TEC",id:"m-tec",level:2},{value:"Energy Butler GEN2",id:"energy-butler-gen2",level:3},{value:"Energy Butler GEN3",id:"energy-butler-gen3",level:3},{value:"my-PV WiFi Meter",id:"my-pv-wifi-meter",level:2},{value:"OpenEMS",id:"openems",level:2},{value:"Orno OR-WE-516, OR-WE-517",id:"orno-or-we-516-or-we-517",level:2},{value:"P1Monitor P1 Monitor",id:"p1monitor-p1-monitor",level:2},{value:"Powerdog",id:"powerdog",level:2},{value:"Powerfox Poweropti",id:"powerfox-poweropti",level:2},{value:"Qcells Q.HOME ESS HYB-G3",id:"qcells-qhome-ess-hyb-g3",level:2},{value:"RCT Power",id:"rct-power",level:2},{value:"Saia-Burgess Controls ALE3, AWD3",id:"saia-burgess-controls-ale3-awd3",level:2},{value:"SAJ H2 Series Hybrid Solar Inverter",id:"saj-h2-series-hybrid-solar-inverter",level:2},{value:"SAX Homespeicher",id:"sax-homespeicher",level:2},{value:"Schneider Electric iEM3xxx Modbus",id:"schneider-electric-iem3xxx-modbus",level:2},{value:"SENEC .Home",id:"senec-home",level:2},{value:"Senergy SE 4/5/6KTL-S1/G2 Inverter",id:"senergy-se-456ktl-s1g2-inverter",level:2},{value:"Shelly",id:"shelly",level:2},{value:"3EM",id:"3em",level:3},{value:"Pro 3 EM",id:"pro-3-em",level:3},{value:"Siemens",id:"siemens",level:2},{value:"7KT1665",id:"7kt1665",level:3},{value:"PAC 2200",id:"pac-2200",level:3},{value:"SMA",id:"sma",level:2},{value:"Data Manager",id:"data-manager",level:3},{value:"Energy Meter",id:"energy-meter",level:3},{value:"Inverter",id:"inverter",level:3},{value:"Smartfox Smartfox Reg/Reg extended/Pro/Pro 2/Pro Light/Pro Light 2/Light",id:"smartfox-smartfox-regreg-extendedpropro-2pro-lightpro-light-2light",level:2},{value:"SMA",id:"sma-1",level:2},{value:"Smart Energy Hybrid Inverter",id:"smart-energy-hybrid-inverter",level:3},{value:"Sunny Home Manager 2.0",id:"sunny-home-manager-20",level:3},{value:"WebBox",id:"webbox",level:3},{value:"SofarSolar",id:"sofarsolar",level:2},{value:"HYD 3\u20266K-EP",id:"hyd-36k-ep",level:3},{value:"HYD 5\u202620K-3PH",id:"hyd-520k-3ph",level:3},{value:"Inverter / Hybrid Inverter",id:"inverter--hybrid-inverter",level:3},{value:"SOFAR 5\u202624KTL-G3",id:"sofar-524ktl-g3",level:3},{value:"SOFAR 80\u2026136KTL",id:"sofar-80136ktl",level:3},{value:"Solaranzeige Solaranzeige",id:"solaranzeige-solaranzeige",level:2},{value:"SolarEdge",id:"solaredge",level:2},{value:"Hybrid Inverter",id:"hybrid-inverter-1",level:3},{value:"Inverter",id:"inverter-1",level:3},{value:"Solarlog",id:"solarlog",level:2},{value:"SolarMax",id:"solarmax",level:2},{value:"MAX.STORAGE / MAX.STORAGE Ultimate",id:"maxstorage--maxstorage-ultimate",level:3},{value:"SP Series Inverter",id:"sp-series-inverter",level:3},{value:"Solarwatt",id:"solarwatt",level:2},{value:"EnergyManager, EnergyManager Pro",id:"energymanager-energymanager-pro",level:3},{value:"MyReserve",id:"myreserve",level:3},{value:"MyReserve Matrix (LAN oder PowerGateway)",id:"myreserve-matrix-lan-oder-powergateway",level:3},{value:"Solax",id:"solax",level:2},{value:"Hybrid X1/X3 G3/G4",id:"hybrid-x1x3-g3g4",level:3},{value:"Hybrid-Inverter (Cloud)",id:"hybrid-inverter-cloud",level:3},{value:"Inverter (Cloud)",id:"inverter-cloud",level:3},{value:"Sonnen",id:"sonnen",level:2},{value:"comfort, eco 5, eco 6, oem 6.5",id:"comfort-eco-5-eco-6-oem-65",level:3},{value:"sonnenBatterie",id:"sonnenbatterie",level:3},{value:"Steca coolcept fleX",id:"steca-coolcept-flex",level:2},{value:"Sungrow",id:"sungrow",level:2},{value:"SG Series Inverter",id:"sg-series-inverter",level:3},{value:"SH Series Hybrid Inverter",id:"sh-series-hybrid-inverter",level:3},{value:"Sunsynk SYNK-(8/10/12)K-SG04LP3 <em>untested</em>",id:"sunsynk-synk-81012k-sg04lp3-untested",level:2},{value:"Tesla Powerwall",id:"tesla-powerwall",level:2},{value:"Tibber Pulse",id:"tibber-pulse",level:2},{value:"TQ",id:"tq",level:2},{value:"Energy Manager EM2xx/EM3xx",id:"energy-manager-em2xxem3xx",level:3},{value:"Energy Manager EM420",id:"energy-manager-em420",level:3},{value:"VARTA pulse/ pulse neo/ element (PV only available with PV sensor)",id:"varta-pulse-pulse-neo-element-pv-only-available-with-pv-sensor",level:2},{value:"Victron Energy",id:"victron-energy",level:2},{value:"Youless Energy Monitor",id:"youless-energy-monitor",level:2},{value:"ZCS Azzurro Inverter / Hybrid Inverter",id:"zcs-azzurro-inverter--hybrid-inverter",level:2},{value:"Zuidwijk SlimmeLezer(+)",id:"zuidwijk-slimmelezer",level:2},{value:"Generic support",id:"generic-support",level:2},{value:"Custom",id:"custom",level:3},{value:"Hybrid Inverter",id:"hybrid-inverter-2",level:3},{value:"Inverter",id:"inverter-2",level:3},{value:"Volksz\xe4hler",id:"volksz\xe4hler",level:3},{value:"HTTP API",id:"http-api",level:4},{value:"HTTP API, Import &amp; Export",id:"http-api-import--export",level:4},{value:"WebSocket API",id:"websocket-api",level:4},{value:"vzlogger",id:"vzlogger",level:3},{value:"Switchable sockets",id:"switchable-sockets",level:2},{value:"AVM FritzDECT",id:"avm-fritzdect",level:3},{value:"Homematic IP",id:"homematic-ip",level:3},{value:"myStrom Switch",id:"mystrom-switch",level:3},{value:"Shelly 1PM, EM, Plug S",id:"shelly-1pm-em-plug-s",level:3},{value:"Tasmota",id:"tasmota",level:3},{value:"TP-Link",id:"tp-link",level:3},{value:"H-Series Smart Plug",id:"h-series-smart-plug",level:4},{value:"Tapo P-Series Smart Plug",id:"tapo-p-series-smart-plug",level:4}],y=(c="DeviceFeatures",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var c;const b={toc:u},g="wrapper";function v(e){let{components:t,...a}=e;return(0,r.kt)(g,(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"meters--site"},"Meters / Site"),(0,r.kt)("p",null,"The devices on this page can all be used as energy measuring points (Meters) for various purposes, including\nthe grid supply current (",(0,r.kt)("inlineCode",{parentName:"p"},"grid"),"), Solar power (",(0,r.kt)("inlineCode",{parentName:"p"},"pv"),"), House Battery (",(0,r.kt)("inlineCode",{parentName:"p"},"battery"),"), and Charger current (",(0,r.kt)("inlineCode",{parentName:"p"},"charge"),")."),(0,r.kt)("p",null,"The configuration is formatted as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: grid\n    type: ...\n  - name: pv\n    type: ...\n  - name: battery\n    type: ...\n")),(0,r.kt)("p",null,"Once you have adapted the code samples to suit your meters in ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc.yaml"),", you can test the connection using the ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc meter")," command, which returns the current status of all connected meters.\nIf you just want to test one meter at a time, use ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc meter --name my_meter"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ./evcc meter\n\ngrid\n-----\nPower:          -31W\nEnergy:         5195.5kWh\nCurrent L1..L3: 3.05A 1.07A 1.15A\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},'Most components used in modern Solar / Battery installations, especially inverters and battery storage (but also some metering devices!) have support for the relatively standardised "SunSpec" data model, which can be queried via Modbus/TCP without requiring device-specific data registers.\nIf your system isn\'t listed here, that might mean that it is 100% SunSpec-compatible, so try that as your first port of call. (You may need to enable network support on your device - check the manual)')),(0,r.kt)("h2",{id:"abb-a43-a44-b23-b24"},"ABB A43, A44, B23, B24"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: abb-ab\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: abb-ab\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"acrel-adw300-wireless-metering-meter"},"Acrel ADW300 Wireless Metering Meter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: acrel-adw300\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 1200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: acrel-adw300\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 1200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: acrel-adw300\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 1200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"ads-tec-storaxe"},"Ads-tec StoraXe"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: storaxe\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"alpha-ess-storion-smile"},"Alpha ESS Storion SMILE"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: alpha-ess-smile\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: alpha-ess-smile\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: alpha-ess-smile\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"bernecker-engineering-mpm3pm"},"Bernecker Engineering MPM3PM"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: mpm3pm\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: mpm3pm\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"bosswerk-mi-series-micro-inverter"},"Bosswerk MI series micro inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarman\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: admin # User account (e.g. email address, user id, etc.) (optional)\n    password: admin # Password of the user account (use single quotes in case of leading zeros) (optional) \n")),(0,r.kt)("h2",{id:"carlo-gavazzi"},"Carlo Gavazzi"),(0,r.kt)("h3",{id:"emet-330340"},"EM/ET 330/340"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: cg-emt3xx\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: cg-emt3xx\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"em24"},"EM24"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: cg-em24\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: cg-em24\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"cfos-powerbrain-meter"},"cFos PowerBrain Meter"),(0,r.kt)(y,{features:"",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: cfos\n    usage: charge\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 4702 # Port \n")),(0,r.kt)(m.ZP,{mdxType:"SponsorshipRequired"}),(0,r.kt)("h2",{id:"deye"},"Deye"),(0,r.kt)("h3",{id:"sun-series-micro-inverter"},"SUN series micro inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarman\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: admin # User account (e.g. email address, user id, etc.) (optional)\n    password: admin # Password of the user account (use single quotes in case of leading zeros) (optional) \n")),(0,r.kt)("h3",{id:"sun-5681012k-sg04lp3-eu-series-hybrid-inverter"},"SUN-(5/6/8/10/12)K-SG04LP3-EU series hybrid inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: deye-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: deye-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: deye-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"discovergy"},"Discovergy"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: discovergy\n    usage: grid\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    meter: 1ESY1161229886 \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: discovergy\n    usage: pv\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    meter: 1ESY1161229886 \n")))),(0,r.kt)("h2",{id:"dsmr"},"DSMR"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: dsmr\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 1502 # Port (optional) \n")),(0,r.kt)("h2",{id:"dzg-dvh4013"},"DZG DVH4013"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: dzg\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')),(0,r.kt)("h2",{id:"e3dc"},"E3/DC"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: e3dc\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: e3dc\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: e3dc\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")))),(0,r.kt)("h2",{id:"eastron"},"Eastron"),(0,r.kt)("h3",{id:"sdm120-modbus"},"SDM120-Modbus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm120\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm120\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sdm220230"},"SDM220/230"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm220_230\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm220_230\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sdm630-modbus"},"SDM630-Modbus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sdm72d-m"},"SDM72D-M"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm72\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm72\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sdm72dm-v2"},"SDM72DM-V2"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"enphase-iq-envoy"},"Enphase IQ Envoy"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,'Only batteries of type "AC Battery" are currently supported by Enphase-API.'),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: enphase\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    token: # Required if Envoy Firmware D7.x.xxx. Token is valid for one year. Instructions for obtaining a token via web UI: https://enphase.com/download/accessing-iq-gateway-local-apis-or-local-ui-token-based-authentication (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: enphase\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    token: # Required if Envoy Firmware D7.x.xxx. Token is valid for one year. Instructions for obtaining a token via web UI: https://enphase.com/download/accessing-iq-gateway-local-apis-or-local-ui-token-based-authentication (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: enphase\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    token: # Required if Envoy Firmware D7.x.xxx. Token is valid for one year. Instructions for obtaining a token via web UI: https://enphase.com/download/accessing-iq-gateway-local-apis-or-local-ui-token-based-authentication (optional) \n")))),(0,r.kt)("h2",{id:"esphome-dsmr"},"ESPHome DSMR"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: slimmelezer\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h2",{id:"fenecon"},"FENECON"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"foxess"},"FoxESS"),(0,r.kt)("h3",{id:"h1-series-hybrid-inverter"},"H1 Series Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: fox-ess-h1\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: fox-ess-h1\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"h3-series-hybrid-inverter"},"H3 Series Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: fox-ess-h3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: fox-ess-h3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: fox-ess-h3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"fronius"},"Fronius"),(0,r.kt)("h3",{id:"primo-gen24-plus"},"Primo GEN24 Plus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")))),(0,r.kt)("h3",{id:"solar-api-v1"},"Solar API V1"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-solarapi-v1\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-solarapi-v1\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-solarapi-v1\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"symo-gen24-plus"},"Symo GEN24 Plus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")))),(0,r.kt)("h2",{id:"ginlong-solis-inverter"},"Ginlong Solis inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarman\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: admin # User account (e.g. email address, user id, etc.) (optional)\n    password: admin # Password of the user account (use single quotes in case of leading zeros) (optional) \n")),(0,r.kt)("h2",{id:"go-e-controller"},"go-e Controller"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: go-e-controller\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: go-e-controller\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"goodwe-etehbhbt-hybrid-inverter"},"GoodWe ET/EH/BH/BT Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: goodwe-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: goodwe-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: goodwe-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"growatt"},"Growatt"),(0,r.kt)("h3",{id:"hybrid-inverter"},"Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: growatt-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: growatt-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: growatt-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"tl-xh-hybrid-inverter"},"TL-X(H) Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: growatt-hybrid-tlxh\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: growatt-hybrid-tlxh\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: growatt-hybrid-tlxh\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"homewizard-wi-fi-p1-meter"},"HomeWizard Wi-Fi P1 Meter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: homewizard\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: homewizard\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"hoymiles-hm-and-hms-series-via-opendtu"},"Hoymiles HM and HMS Series (via OpenDTU)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: hoymiles-opendtu\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h2",{id:"huawei"},"Huawei"),(0,r.kt)("h3",{id:"smartlogger"},"SmartLogger"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-smartlogger\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")),(0,r.kt)("h3",{id:"sun2000-via-rs485-modbus"},"SUN2000 via RS485 Modbus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: huawei-sun2000-rs485\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: huawei-sun2000-rs485\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: huawei-sun2000-rs485\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sun2000-with-sdongle"},"SUN2000 with SDongle"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n")),(0,r.kt)("h3",{id:"sun2000-with-sdongle--power-sensor"},"SUN2000 with SDongle & Power Sensor"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: huawei-dongle-powersensor\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle-powersensor\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: huawei-dongle-powersensor\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    timeout: 15s # optional \n")))),(0,r.kt)("h2",{id:"igen-tech-solarman-logger"},"IGEN Tech Solarman Logger"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarman\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: admin # User account (e.g. email address, user id, etc.) (optional)\n    password: admin # Password of the user account (use single quotes in case of leading zeros) (optional) \n")),(0,r.kt)("h2",{id:"inepro-pro380-mod"},"inepro PRO380-MOD"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: inepro\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: inepro\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"janitza-b-series-umg-series"},"Janitza B series, UMG series"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: janitza\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: janitza\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"kostal"},"Kostal"),(0,r.kt)("h3",{id:"piko-legacy"},"Piko (legacy)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-legacy\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n")),(0,r.kt)("h3",{id:"piko-hybrid"},"Piko Hybrid"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-piko-hybrid\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-hybrid\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: kostal-piko-hybrid\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"piko-mp-plus"},"Piko MP Plus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-mp-plus\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h3",{id:"piko-piko-ba"},"Piko, Piko BA"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-piko-pv\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-pv\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"plenticore-hybrid"},"Plenticore Hybrid"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-plenticore\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: kostal-plenticore\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n")))),(0,r.kt)("h3",{id:"smart-energy-meter"},"Smart Energy Meter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h3",{id:"smart-energy-meter-via-inverter"},"Smart Energy Meter (via inverter)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"The energy meter must be installed in sensor position 2 (grid connection). Sensor position 1 (House consumption) is not supported."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem-inverter\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n")),(0,r.kt)("h2",{id:"lg-ess-home-810"},"LG ESS Home 8/10"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: lg-ess-home-8-10\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    password: # User password, see https://github.com/Morluktom/ioBroker.lg-ess-home/tree/master#getting-the-password. Alteratively, use registration id for admin login. (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: lg-ess-home-8-10\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    password: # User password, see https://github.com/Morluktom/ioBroker.lg-ess-home/tree/master#getting-the-password. Alteratively, use registration id for admin login. (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: lg-ess-home-8-10\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    password: # User password, see https://github.com/Morluktom/ioBroker.lg-ess-home/tree/master#getting-the-password. Alteratively, use registration id for admin login. (optional) \n")))),(0,r.kt)("h2",{id:"m-tec"},"M-TEC"),(0,r.kt)("h3",{id:"energy-butler-gen2"},"Energy Butler GEN2"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: mtec-eb-gen2\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: mtec-eb-gen2\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: mtec-eb-gen2\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"energy-butler-gen3"},"Energy Butler GEN3"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: mtec-eb-gen3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: mtec-eb-gen3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: mtec-eb-gen3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"my-pv-wifi-meter"},"my-PV WiFi Meter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: mypv-wifi-meter\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"openems"},"OpenEMS"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"orno-or-we-516-or-we-517"},"Orno OR-WE-516, OR-WE-517"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: orno\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: orno\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"p1monitor-p1-monitor"},"P1Monitor P1 Monitor"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: p1monitor\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h2",{id:"powerdog"},"Powerdog"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: powerdog\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: powerdog\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h2",{id:"powerfox-poweropti"},"Powerfox Poweropti"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: powerfox-poweropti\n    usage: grid\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: powerfox-poweropti\n    usage: pv\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n")))),(0,r.kt)("h2",{id:"qcells-qhome-ess-hyb-g3"},"Qcells Q.HOME ESS HYB-G3"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"rct-power"},"RCT Power"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: rct-power\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: rct-power\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: rct-power\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"saia-burgess-controls-ale3-awd3"},"Saia-Burgess Controls ALE3, AWD3"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sbc-axx3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: sbc-axx3\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"saj-h2-series-hybrid-solar-inverter"},"SAJ H2 Series Hybrid Solar Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: saj-h2\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 115200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: saj-h2\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 115200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: saj-h2\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 115200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"sax-homespeicher"},"SAX Homespeicher"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sax\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 64\n    host: 192.0.2.2 # Hostname\n    port: 3600 # Port \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sax\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 64\n    host: 192.0.2.2 # Hostname\n    port: 3600 # Port \n")))),(0,r.kt)("h2",{id:"schneider-electric-iem3xxx-modbus"},"Schneider Electric iEM3xxx Modbus"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: schneider-iem3000\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: schneider-iem3000\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"senec-home"},"SENEC .Home"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: senec-home\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    schema: https # optional \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senec-home\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    schema: https # optional \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: senec-home\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    schema: https # optional \n")))),(0,r.kt)("h2",{id:"senergy-se-456ktl-s1g2-inverter"},"Senergy SE 4/5/6KTL-S1/G2 Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senergy\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"shelly"},"Shelly"),(0,r.kt)("h3",{id:"3em"},"3EM"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: shelly-3em\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-3em\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: shelly-3em\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"pro-3-em"},"Pro 3 EM"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: shelly-pro-3em\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-pro-3em\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: shelly-pro-3em\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n")))),(0,r.kt)("h2",{id:"siemens"},"Siemens"),(0,r.kt)("h3",{id:"7kt1665"},"7KT1665"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: siemens-7kt1665\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: siemens-7kt1665\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"pac-2200"},"PAC 2200"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: siemens-pac2200\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: siemens-pac2200\n    usage: charge\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"sma"},"SMA"),(0,r.kt)("h3",{id:"data-manager"},"Data Manager"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,'In the web interface of the SMA Data Manager you need to activate "Modbus Server activated" in the section "External communication".'),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-data-manager\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-data-manager\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-data-manager\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"energy-meter"},"Energy Meter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-energy-meter\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-energy-meter\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"inverter"},"Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-inverter\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password for user group Standard (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-inverter\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password for user group Standard (optional) \n")))),(0,r.kt)("h2",{id:"smartfox-smartfox-regreg-extendedpropro-2pro-lightpro-light-2light"},"Smartfox Smartfox Reg/Reg extended/Pro/Pro 2/Pro Light/Pro Light 2/Light"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"Can be used to get 'grid', 'pv' and 'aux' data.\nIf 'usage' is not defined, then return the power for the water heating (to be used as 'aux')."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: smartfox\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: smartfox\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"sma-1"},"SMA"),(0,r.kt)("h3",{id:"smart-energy-hybrid-inverter"},"Smart Energy Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-hybrid\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-hybrid\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"sunny-home-manager-20"},"Sunny Home Manager 2.0"),(0,r.kt)(y,{features:"smahems,sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-home-manager\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h3",{id:"webbox"},"WebBox"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-webbox\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"sofarsolar"},"SofarSolar"),(0,r.kt)("h3",{id:"hyd-36k-ep"},"HYD 3\u20266K-EP"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n')))),(0,r.kt)("h3",{id:"hyd-520k-3ph"},"HYD 5\u202620K-3PH"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n')))),(0,r.kt)("h3",{id:"inverter--hybrid-inverter"},"Inverter / Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sofar-524ktl-g3"},"SOFAR 5\u202624KTL-G3"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n')))),(0,r.kt)("h3",{id:"sofar-80136ktl"},"SOFAR 80\u2026136KTL"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar-g3\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar-g3\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar-g3\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    delay: 1s # optional \n')))),(0,r.kt)("h2",{id:"solaranzeige-solaranzeige"},"Solaranzeige Solaranzeige"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solaranzeige\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname of the MQTT broker\n    port: 1883 # MQTT broker port (optional)\n    topic: solaranzeige/box1 # Topic (omit leading /) (optional)\n    timeout: 30s # Don't accept values older than this value (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solaranzeige\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname of the MQTT broker\n    port: 1883 # MQTT broker port (optional)\n    topic: solaranzeige/box1 # Topic (omit leading /) (optional)\n    timeout: 30s # Don't accept values older than this value (optional) \n")))),(0,r.kt)("h2",{id:"solaredge"},"SolarEdge"),(0,r.kt)("h3",{id:"hybrid-inverter-1"},"Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"Only one system may access the inverter!"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solaredge-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solaredge-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solaredge-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n')))),(0,r.kt)("h3",{id:"inverter-1"},"Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"Only one system may access the inverter!"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solaredge-inverter\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solaredge-inverter\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 10s # optional \n')))),(0,r.kt)("h2",{id:"solarlog"},"Solarlog"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"We recommend to use this device for grid power values only, if no other device is available providing this data.\nIf you have a home battery installed, please do not use this device at all for grid power values."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarlog\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarlog\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")))),(0,r.kt)("h2",{id:"solarmax"},"SolarMax"),(0,r.kt)("h3",{id:"maxstorage--maxstorage-ultimate"},"MAX.STORAGE / MAX.STORAGE Ultimate"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarmax-maxstorage\n    usage: grid\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarmax-maxstorage\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarmax-maxstorage\n    usage: battery\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"sp-series-inverter"},"SP Series Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senergy\n    usage: pv\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"solarwatt"},"Solarwatt"),(0,r.kt)("h3",{id:"energymanager-energymanager-pro"},"EnergyManager, EnergyManager Pro"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"myreserve"},"MyReserve"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"myreserve-matrix-lan-oder-powergateway"},"MyReserve Matrix (LAN oder PowerGateway)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n")))),(0,r.kt)("h2",{id:"solax"},"Solax"),(0,r.kt)("h3",{id:"hybrid-x1x3-g3g4"},"Hybrid X1/X3 G3/G4"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"hybrid-inverter-cloud"},"Hybrid-Inverter (Cloud)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"The Solax hybrid inverter has to be registered in the SolaxCloud."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attention"),": Values can only be fetched every 150s and then also can be 5 minutes old. Charging by PV will not be optimal because of this! Only use as fallback if no local access is available."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax-hybrid-cloud\n    usage: grid\n    tokenid: # Go to https://www.solaxcloud.com/#/api and take the value of "ObtaintokenID".\n    serial: # Go to https://www.solaxcloud.com/#/inverter and take the value of registration number. \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax-hybrid-cloud\n    usage: pv\n    tokenid: # Go to https://www.solaxcloud.com/#/api and take the value of "ObtaintokenID".\n    serial: # Go to https://www.solaxcloud.com/#/inverter and take the value of registration number. \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax-hybrid-cloud\n    usage: battery\n    tokenid: # Go to https://www.solaxcloud.com/#/api and take the value of "ObtaintokenID".\n    serial: # Go to https://www.solaxcloud.com/#/inverter and take the value of registration number. \n')))),(0,r.kt)("h3",{id:"inverter-cloud"},"Inverter (Cloud)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"The Solax inverter has to be registered in the SolaxCloud."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attention"),": Values can only be fetched every 150s and then also can be 5 minutes old. Charging by PV will not be optimal because of this! Only use as fallback if no local access is available."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solax-inverter-cloud\n    usage: pv\n    tokenid: # Use the ObtaintokenID from https://www.solaxcloud.com/#/api.\n    serial: # Use the registration number from https://www.solaxcloud.com/#/inverter. \n")),(0,r.kt)("h2",{id:"sonnen"},"Sonnen"),(0,r.kt)("h3",{id:"comfort-eco-5-eco-6-oem-65"},"comfort, eco 5, eco 6, oem 6.5"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sonnenbatterie-eco56\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 7979 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sonnenbatterie-eco56\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 7979 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sonnenbatterie-eco56\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 7979 # Port (optional) \n")))),(0,r.kt)("h3",{id:"sonnenbatterie"},"sonnenBatterie"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sonnenbatterie\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sonnenbatterie\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sonnenbatterie\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 8080 # Port (optional) \n")))),(0,r.kt)("h2",{id:"steca-coolcept-flex"},"Steca coolcept fleX"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-mp-plus\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h2",{id:"sungrow"},"Sungrow"),(0,r.kt)("h3",{id:"sg-series-inverter"},"SG Series Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sungrow-inverter\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sungrow-inverter\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sh-series-hybrid-inverter"},"SH Series Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"The connection can be serial (RS485) or via the native (rear) LAN socket on the inverter. Connections via the WiNet-S dongle (WiFi or LAN) do NOT work correctly."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sungrow-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sungrow-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sungrow-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"sunsynk-synk-81012k-sg04lp3-untested"},"Sunsynk SYNK-(8/10/12)K-SG04LP3 ",(0,r.kt)("em",{parentName:"h2"},"untested")),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: deye-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: deye-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: deye-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"tesla-powerwall"},"Tesla Powerwall"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: tesla-powerwall\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password of the user "customer" \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: tesla-powerwall\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password of the user "customer" \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: tesla-powerwall\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    password: # Password of the user "customer" \n')))),(0,r.kt)("h2",{id:"tibber-pulse"},"Tibber Pulse"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tibber-pulse\n    usage: grid\n    token: 5K4MVS-OjfWhK_4yrjOlFe1F6kJXPVf7eQYggo8ebAE\n    homeid: 96a14971-525a-4420-aae9-e5aedaa129ff # optional \n")),(0,r.kt)("h2",{id:"tq"},"TQ"),(0,r.kt)("h3",{id:"energy-manager-em2xxem3xx"},"Energy Manager EM2xx/EM3xx"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tq-em\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 80 # Port (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n")),(0,r.kt)("h3",{id:"energy-manager-em420"},"Energy Manager EM420"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tq-em420\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 80 # Port (optional)\n    device: local # JSON-API -> Data Endpoint (optional)\n    token: ey... # Access token for EM420 (Create in Profile -> Access tokens) \n")),(0,r.kt)("h2",{id:"varta-pulse-pulse-neo-element-pv-only-available-with-pv-sensor"},"VARTA pulse/ pulse neo/ element (PV only available with PV sensor)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: varta\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: varta\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: varta\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")))),(0,r.kt)("h2",{id:"victron-energy"},"Victron Energy"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: victron-energy\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: victron-energy\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: victron-energy\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    port: 502 # Port (optional) \n")))),(0,r.kt)("h2",{id:"youless-energy-monitor"},"Youless Energy Monitor"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("p",null,"An externally connected S0 generation meter is required to record the solar production."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: youless\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: youless\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h2",{id:"zcs-azzurro-inverter--hybrid-inverter"},"ZCS Azzurro Inverter / Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sofarsolar\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sofarsolar\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sofarsolar\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"zuidwijk-slimmelezer"},"Zuidwijk SlimmeLezer(+)"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: slimmelezer\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h2",{id:"generic-support"},"Generic support"),(0,r.kt)("h3",{id:"custom"},"Custom"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_meter\n    type: custom\n    power: # power (W)\n      source: # plugin type\n      # ...\n    energy: # optional energy (kWh)\n      source: # plugin type\n      # ...\n    soc: # optional battery soc (%)\n      source: # plugin type\n      # ...\n    currents: # optional currents (A)\n      - source: # L1 plugin type\n        # ...\n      - source: # L2 plugin type\n        # ...\n      - source: # L3 plugin type\n        # ...\n")),(0,r.kt)("h3",{id:"hybrid-inverter-2"},"Hybrid Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sunspec-hybrid\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sunspec-hybrid\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sunspec-hybrid\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"inverter-2"},"Inverter"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sunspec-inverter\n    usage: grid\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sunspec-inverter\n    usage: pv\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sunspec-inverter\n    usage: battery\n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"volksz\xe4hler"},"Volksz\xe4hler"),(0,r.kt)("h4",{id:"http-api"},"HTTP API"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-http\n    usage: grid\n    url: # Example: http://zaehler.network.local:8080/api/data (optional)\n    uuid: \n")),(0,r.kt)("h4",{id:"http-api-import--export"},"HTTP API, Import & Export"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-importexport\n    usage: grid\n    url: # The URL is for example: http://zaehler.network.local:8080/api/data (optional)\n    importuuid:\n    exportuuid: \n")),(0,r.kt)("h4",{id:"websocket-api"},"WebSocket API"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-ws\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8082 # Port (optional)\n    uuid: \n")),(0,r.kt)("h3",{id:"vzlogger"},"vzlogger"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: vzlogger\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    port: 8081 # Port (optional)\n    uuid: \n")),(0,r.kt)("h2",{id:"switchable-sockets"},"Switchable sockets"),(0,r.kt)("h3",{id:"avm-fritzdect"},"AVM FritzDECT"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fritzdect\n    usage: pv\n    uri: https://fritz.box # HTTP(S) address (optional)\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    ain: 307788992233 # The AIN is printed on the type label on the back of the device. Embed it in double quotes in case of leading zeroes. \n"))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: fritzdect\n    usage: charge\n    uri: https://fritz.box # HTTP(S) address (optional)\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros)\n    ain: 307788992233 # The AIN is printed on the type label on the back of the device. Embed it in double quotes in case of leading zeroes. \n")))),(0,r.kt)("h3",{id:"homematic-ip"},"Homematic IP"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: homematic\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    device: '0001EE89AAD848' # Homematic device id like shown in the CCU web user interface.\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: homematic\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    device: '0001EE89AAD848' # Homematic device id like shown in the CCU web user interface.\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: homematic\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    device: '0001EE89AAD848' # Homematic device id like shown in the CCU web user interface.\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n")))),(0,r.kt)("h3",{id:"mystrom-switch"},"myStrom Switch"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: mystrom\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n"))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: mystrom\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname \n")))),(0,r.kt)("h3",{id:"shelly-1pm-em-plug-s"},"Shelly 1PM, EM, Plug S"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-1pm\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 0 # optional \n"))),(0,r.kt)(o.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: shelly-1pm\n    usage: charge\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.) (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional)\n    channel: 0 # optional \n")))),(0,r.kt)("h3",{id:"tasmota"},"Tasmota"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tasmota\n    usage: grid\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"))),(0,r.kt)(o.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tasmota\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n"))),(0,r.kt)(o.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: tasmota\n    usage: battery\n    host: 192.0.2.2 # IP address or hostname\n    user: # admin is default (optional)\n    password: # Password of the user account (use single quotes in case of leading zeros) (optional) \n")))),(0,r.kt)("h3",{id:"tp-link"},"TP-Link"),(0,r.kt)("h4",{id:"h-series-smart-plug"},"H-Series Smart Plug"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tplink\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname \n")),(0,r.kt)("h4",{id:"tapo-p-series-smart-plug"},"Tapo P-Series Smart Plug"),(0,r.kt)(y,{features:"sponsorfree",mdxType:"DeviceFeatures"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tapo\n    usage: pv\n    host: 192.0.2.2 # IP address or hostname\n    user: # User account (e.g. email address, user id, etc.)\n    password: # Password of the user account (use single quotes in case of leading zeros) \n")))}v.isMDXComponent=!0}}]);