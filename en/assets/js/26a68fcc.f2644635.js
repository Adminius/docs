"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[9931],{5059:(e,t,r)=>{r.d(t,{ZP:()=>c});var n=r(7462),a=(r(7294),r(3905));r(8209);const i={toc:[]},o="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(o,(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Sponsor-Token erforderlich",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Weitere Informationen zum \ud83d\udc9a evcc Sponsorship gibt es ",(0,a.kt)("a",{parentName:"p",href:"/docs/sponsorship"},"hier"),".")))}c.isMDXComponent=!0},9621:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));r(8209),r(5059);const i={sidebar_position:4},o="chargers",c={unversionedId:"reference/configuration/chargers",id:"reference/configuration/chargers",title:"chargers",description:"To control the charging process, evcc must be able to communicate with a charger.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/reference/configuration/chargers.mdx",sourceDirName:"reference/configuration",slug:"/reference/configuration/chargers",permalink:"/en/docs/reference/configuration/chargers",draft:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current/reference/configuration/chargers.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"loadpoints",permalink:"/en/docs/reference/configuration/loadpoints"},next:{title:"meters",permalink:"/en/docs/reference/configuration/meters"}},s={},l=[{value:"Required Parameters",id:"required-parameters",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>type</code>",id:"type",level:3},{value:"Optional Parameters",id:"optional-parameters",level:2},{value:"<code>integrateddevice</code>",id:"integrateddevice",level:3}],p={toc:l},d="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"chargers"},(0,a.kt)("inlineCode",{parentName:"h1"},"chargers")),(0,a.kt)("p",null,"To control the charging process, evcc must be able to communicate with a charger."),(0,a.kt)("p",null,"A charger must have at least the following configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"chargers:\n  - name: charger1 # reference name\n    type: ...\n    ...\n")),(0,a.kt)("p",null,"Below, the possible parameters are explained."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"required-parameters"},"Required Parameters"),(0,a.kt)("h3",{id:"name"},(0,a.kt)("inlineCode",{parentName:"h3"},"name")),(0,a.kt)("p",null,"A short designation of the charger defined here. The value is used when referencing the charger in the configuration of the ",(0,a.kt)("a",{parentName:"p",href:"loadpoints#charger"},"charger"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"For example"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: charger1\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"type"},(0,a.kt)("inlineCode",{parentName:"h3"},"type")),(0,a.kt)("p",null,"This is the evcc-specific charger type that allows communication with the charger. Known chargers can be integrated using the ",(0,a.kt)("inlineCode",{parentName:"p"},"template")," type. The appropriate (template) type can be found under ",(0,a.kt)("a",{parentName:"p",href:"/docs/devices/chargers"},"devices - chargers"),"."),(0,a.kt)("p",null,"For unknown chargers (or for other individual reasons), the default implementation can be used through ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/plugins"},"Plugins"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"For example"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"type: custom\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"optional-parameters"},"Optional Parameters"),(0,a.kt)("h3",{id:"integrateddevice"},(0,a.kt)("inlineCode",{parentName:"h3"},"integrateddevice")),(0,a.kt)("p",null,'This parameter causes chargers that operate without a "vehicle" (e.g. heat pump, eBike) to not display a vehicle, thus omitting vehicle detection.'),(0,a.kt)("p",null,"In connection with this parameter, an icon can also be assigned (see ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/configuration/vehicles#icon"},(0,a.kt)("inlineCode",{parentName:"a"},"vehicle.icon")),"), which will then be displayed at the charger."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"For example"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"integrateddevice: true\nicon: bike\n")),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"")))}h.isMDXComponent=!0}}]);