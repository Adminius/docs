"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[9493],{9443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var a=t(7462),i=(t(7294),t(3905));t(8209);const l={sidebar_position:10},o="log, levels",r={unversionedId:"reference/configuration/log",id:"reference/configuration/log",title:"log, levels",description:"log",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/reference/configuration/log.md",sourceDirName:"reference/configuration",slug:"/reference/configuration/log",permalink:"/en/docs/reference/configuration/log",draft:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/i18n/en/docusaurus-plugin-content-docs/current/reference/configuration/log.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"interval",permalink:"/en/docs/reference/configuration/interval"},next:{title:"tariffs",permalink:"/en/docs/reference/configuration/tariffs"}},s={},c=[{value:"<code>log</code>",id:"log",level:2},{value:"<code>levels</code>",id:"levels",level:2}],p={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"log-levels"},(0,i.kt)("inlineCode",{parentName:"h1"},"log, levels")),(0,i.kt)("h2",{id:"log"},(0,i.kt)("inlineCode",{parentName:"h2"},"log")),(0,i.kt)("p",null,"Defines the level of detail for logging information to the console."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fatal"),": Only messages of the ",(0,i.kt)("inlineCode",{parentName:"li"},"fatal")," category will be displayed. These are errors that prevent the system from functioning."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"error"),": Only messages of the ",(0,i.kt)("inlineCode",{parentName:"li"},"error")," category will be displayed. There are very few of this type of message."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"warn"),": Includes ",(0,i.kt)("inlineCode",{parentName:"li"},"error"),", additionally shows messages of the ",(0,i.kt)("inlineCode",{parentName:"li"},"warn")," category."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"info"),": Includes ",(0,i.kt)("inlineCode",{parentName:"li"},"warn"),", additionally shows messages of the ",(0,i.kt)("inlineCode",{parentName:"li"},"info")," category."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"debug"),": Includes ",(0,i.kt)("inlineCode",{parentName:"li"},"info"),", additionally shows messages of the ",(0,i.kt)("inlineCode",{parentName:"li"},"debug")," category. This is necessary for error analysis."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trace"),": Includes ",(0,i.kt)("inlineCode",{parentName:"li"},"debug"),", additionally shows messages of the ",(0,i.kt)("inlineCode",{parentName:"li"},"trace")," category. This is the most detailed category and can result in very large log data. In general, this is not usually needed!")),(0,i.kt)("p",null,"When running evcc in the console, the ",(0,i.kt)("inlineCode",{parentName:"p"},"log")," messages are simply directed to the standard output.",(0,i.kt)("br",{parentName:"p"}),"\n","If evcc is run as a Linux systemd service, messages can be tracked using ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo journalctl -fau evcc"),", see ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/setup#how-can-i-create-a-logfile-for-error-analysis"},"Logfile zur Fehleranalyse"),".",(0,i.kt)("br",{parentName:"p"}),"\n","In the case of a Docker installation, you can view the messages using ",(0,i.kt)("inlineCode",{parentName:"p"},"docker logs"),", see ",(0,i.kt)("a",{parentName:"p",href:"https://docs.docker.com/config/containers/logging/"},"Docker Documentation"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"For example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"log: error\n")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"levels"},(0,i.kt)("inlineCode",{parentName:"h2"},"levels")),(0,i.kt)("p",null,"Allows configuring different logging levels for various components of evcc."),(0,i.kt)("p",null,"Defines the level of detail for logging for different evcc components."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible components"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"site"),": The central evcc component (control, calculations, ...)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lp-X"),": The respective charging point, where ",(0,i.kt)("inlineCode",{parentName:"li"},"X")," is numbered according to the order of ",(0,i.kt)("a",{parentName:"li",href:"loadpoints"},(0,i.kt)("inlineCode",{parentName:"a"},"loadpoints"))," configuration (charging points), starting at ",(0,i.kt)("inlineCode",{parentName:"li"},"1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sma"),": The SMA HEMS component if SMA Sunny Home Manager 2.0 is integrated using ",(0,i.kt)("a",{parentName:"li",href:"hems"},(0,i.kt)("inlineCode",{parentName:"a"},"hems"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"em"},"vehicle")),": Each ",(0,i.kt)("a",{parentName:"li",href:"vehicles"},(0,i.kt)("inlineCode",{parentName:"a"},"vehicle"))," (vehicle), where you must specify the corresponding value of the ",(0,i.kt)("a",{parentName:"li",href:"vehicles#type"},(0,i.kt)("inlineCode",{parentName:"a"},"type"))," parameter (or template)."),(0,i.kt)("li",{parentName:"ul"},"Additionally, depending on the use case, additional components can be specified (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"cache"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"db"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"influx"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"mqtt"),", ...)")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values for each component"),": Identical to the values of ",(0,i.kt)("a",{parentName:"p",href:"#log"},(0,i.kt)("inlineCode",{parentName:"a"},"log"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"For example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"levels:\n  site: debug\n  lp-1: debug\n  lp-2: debug\n  tesla: trace\n")))}m.isMDXComponent=!0}}]);