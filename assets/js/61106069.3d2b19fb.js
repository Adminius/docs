"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[4713],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||i;return t?r.createElement(m,c(c({ref:n},l),{},{components:t})):r.createElement(m,c({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=p;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var u=2;u<i;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},73949:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return f}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),c=["components"],a={sidebar_position:8},s="network",u={unversionedId:"reference/configuration/uri",id:"reference/configuration/uri",title:"network",description:"Definiert die IP Adresse bzw. den Host Namen und den Port, auf welchem die Web Oberfl\xe4che erreicht werden soll.",source:"@site/docs/reference/configuration/uri.md",sourceDirName:"reference/configuration",slug:"/reference/configuration/uri",permalink:"/docs/reference/configuration/uri",draft:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/docs/reference/configuration/uri.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"hems",permalink:"/docs/reference/configuration/hems"},next:{title:"interval",permalink:"/docs/reference/configuration/interval"}},l={},f=[],p={toc:f};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"network"},(0,i.kt)("inlineCode",{parentName:"h1"},"network")),(0,i.kt)("p",null,"Definiert die IP Adresse bzw. den Host Namen und den Port, auf welchem die Web Oberfl\xe4che erreicht werden soll."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Beispiel"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"network:\n  # schema is the HTTP schema\n  # setting to `https` does not enable https, it only changes the way URLs are generated\n  schema: http\n  # host is the hostname or IP address\n  # if the host name contains a `.local` suffix, the name will be announced on MDNS\n  # docker: MDNS announcements don't work. host must be set to the docker host's name.\n  host: evcc.local\n  # port is the listening port for UI and api\n  # evcc will listen on all available interfaces\n  port: 7070\n")))}d.isMDXComponent=!0}}]);