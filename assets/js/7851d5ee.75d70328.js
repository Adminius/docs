"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[3506],{5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const s="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>y});var n=a(7462),r=a(7294),s=a(6010),l=a(2389),m=a(7392),p=a(7094),d=a(2466);const o="tabList__CuJ",i="tabItem_LNqP";function u(e){const{lazy:t,block:a,defaultValue:l,values:u,groupId:y,className:b}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),c=u??g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,m.l)(c,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===l?l:l??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==k&&!c.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${c.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:T}=(0,p.U)(),[P,N]=(0,r.useState)(k),S=[],{blockElementScrollPositionUntilNextRender:I}=(0,d.o5)();if(null!=y){const e=h[y];null!=e&&e!==P&&c.some((t=>t.value===e))&&N(e)}const f=e=>{const t=e.currentTarget,a=S.indexOf(t),n=c[a].value;n!==P&&(I(t),N(n),null!=y&&T(y,String(n)))},x=e=>{let t=null;switch(e.key){case"Enter":f(e);break;case"ArrowRight":{const a=S.indexOf(e.currentTarget)+1;t=S[a]??S[0];break}case"ArrowLeft":{const a=S.indexOf(e.currentTarget)-1;t=S[a]??S[S.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",o)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},b)},c.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:e=>S.push(e),onKeyDown:x,onClick:f},l,{className:(0,s.Z)("tabs__item",i,l?.className,{"tabs__item--active":P===t})}),a??t)}))),t?(0,r.cloneElement)(g.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function y(e){const t=(0,l.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},5059:(e,t,a)=>{a.d(t,{ZP:()=>l});var n=a(7462),r=(a(7294),a(3905));a(828);const s={toc:[]};function l(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Sponsor-Token erforderlich",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Weitere Informationen zum \ud83d\udc9a evcc Sponsorship gibt es ",(0,r.kt)("a",{parentName:"p",href:"/docs/sponsorship"},"hier"),".")))}l.isMDXComponent=!0},2468:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>b,frontMatter:()=>p,metadata:()=>o,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),s=(a(828),a(5488)),l=a(5162),m=a(5059);const p={sidebar_position:2},d="Hausinstallation",o={unversionedId:"devices/meters",id:"devices/meters",title:"Hausinstallation",description:"Die aufgelisteten Ger\xe4te k\xf6nnen als meter f\xfcr verschiedene Zwecke eingebunden werden. Um die Str\xf6me am Netzanschluss grid zu erhalten, die PV Leistung pv, die Hausbatterie battery oder die Ladeleistung des EV charge.",source:"@site/docs/devices/meters.mdx",sourceDirName:"devices",slug:"/devices/meters",permalink:"/docs/devices/meters",draft:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/docs/devices/meters.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Wallboxen",permalink:"/docs/devices/chargers"},next:{title:"Fahrzeuge",permalink:"/docs/devices/vehicles"}},i={},u=[{value:"Alpha ESS Storion SMILE",id:"alpha-ess-storion-smile",level:2},{value:"Carlo Gavazzi EM24/ET340",id:"carlo-gavazzi-em24et340",level:2},{value:"cFos PowerBrain Meter \ud83d\udc9a",id:"cfos-powerbrain-meter-",level:2},{value:"Discovergy",id:"discovergy",level:2},{value:"DSMR",id:"dsmr",level:2},{value:"E3DC",id:"e3dc",level:2},{value:"Eastron",id:"eastron",level:2},{value:"SDM 630",id:"sdm-630",level:3},{value:"SDM 72/220/230",id:"sdm-72220230",level:3},{value:"SDM 72v2",id:"sdm-72v2",level:3},{value:"FENECON",id:"fenecon",level:2},{value:"FoxESS",id:"foxess",level:2},{value:"FoxESS via Ethernet",id:"foxess-via-ethernet",level:3},{value:"FoxESS via RS485 Modbus",id:"foxess-via-rs485-modbus",level:3},{value:"Fronius",id:"fronius",level:2},{value:"Primo GEN24 Plus",id:"primo-gen24-plus",level:3},{value:"Solar API V1",id:"solar-api-v1",level:3},{value:"Symo GEN24 Plus",id:"symo-gen24-plus",level:3},{value:"GoodWe ET/EH/BH/BT Hybrid Inverter",id:"goodwe-etehbhbt-hybrid-inverter",level:2},{value:"Growatt Hybrid Inverter",id:"growatt-hybrid-inverter",level:2},{value:"Huawei",id:"huawei",level:2},{value:"SUN2000 via RS485 Modbus",id:"sun2000-via-rs485-modbus",level:3},{value:"SUN2000 with SDongle",id:"sun2000-with-sdongle",level:3},{value:"SUN2000 with SDongle &amp; Power Sensor",id:"sun2000-with-sdongle--power-sensor",level:3},{value:"Janitza B23",id:"janitza-b23",level:2},{value:"Kostal",id:"kostal",level:2},{value:"Piko (legacy)",id:"piko-legacy",level:3},{value:"Piko MP Plus",id:"piko-mp-plus",level:3},{value:"Piko, Piko BA",id:"piko-piko-ba",level:3},{value:"Plenticore Hybrid",id:"plenticore-hybrid",level:3},{value:"Smart Energy Meter",id:"smart-energy-meter",level:3},{value:"Smart Energy Meter (\xfcber den Wechselrichter)",id:"smart-energy-meter-\xfcber-den-wechselrichter",level:3},{value:"LG ESS Home 8/10",id:"lg-ess-home-810",level:2},{value:"OpenEMS",id:"openems",level:2},{value:"Powerdog",id:"powerdog",level:2},{value:"Powerfox Poweropti",id:"powerfox-poweropti",level:2},{value:"Qcells Q.HOME ESS HYB-G3",id:"qcells-qhome-ess-hyb-g3",level:2},{value:"RCT Power",id:"rct-power",level:2},{value:"SENEC .Home",id:"senec-home",level:2},{value:"Senergy SE 4/5/6KTL-S1/G2 Inverter",id:"senergy-se-456ktl-s1g2-inverter",level:2},{value:"Shelly 3EM",id:"shelly-3em",level:2},{value:"Siemens",id:"siemens",level:2},{value:"7KT1665",id:"7kt1665",level:3},{value:"PAC 2200",id:"pac-2200",level:3},{value:"SMA",id:"sma",level:2},{value:"Data Manager",id:"data-manager",level:3},{value:"Energy Meter",id:"energy-meter",level:3},{value:"Smart Energy Hybrid-Wechselrichter",id:"smart-energy-hybrid-wechselrichter",level:3},{value:"Sunny Home Manager 2.0",id:"sunny-home-manager-20",level:3},{value:"Wechselrichter",id:"wechselrichter",level:3},{value:"SolarEdge",id:"solaredge",level:2},{value:"Hybrid Inverter",id:"hybrid-inverter",level:3},{value:"Wechselrichter",id:"wechselrichter-1",level:3},{value:"Solarlog",id:"solarlog",level:2},{value:"SolarMax",id:"solarmax",level:2},{value:"MAX.STORAGE / MAX.STORAGE Ultimate",id:"maxstorage--maxstorage-ultimate",level:3},{value:"SP Series Inverter",id:"sp-series-inverter",level:3},{value:"Solarwatt",id:"solarwatt",level:2},{value:"EnergyManager, EnergyManager Pro",id:"energymanager-energymanager-pro",level:3},{value:"MyReserve",id:"myreserve",level:3},{value:"MyReserve Matrix (LAN oder PowerGateway)",id:"myreserve-matrix-lan-oder-powergateway",level:3},{value:"Solax",id:"solax",level:2},{value:"Hybrid X1/X3 G3/G4",id:"hybrid-x1x3-g3g4",level:3},{value:"Hybrid-Wechselrichter (Cloud)",id:"hybrid-wechselrichter-cloud",level:3},{value:"PV-Wechselrichter (Cloud)",id:"pv-wechselrichter-cloud",level:3},{value:"Sonnen sonnenBatterie",id:"sonnen-sonnenbatterie",level:2},{value:"Sungrow",id:"sungrow",level:2},{value:"SG Series Inverter",id:"sg-series-inverter",level:3},{value:"SH Series Hybrid Inverter",id:"sh-series-hybrid-inverter",level:3},{value:"Tesla Powerwall",id:"tesla-powerwall",level:2},{value:"Tibber Pulse",id:"tibber-pulse",level:2},{value:"TQ",id:"tq",level:2},{value:"Energy Manager EM2xx/EM3xx",id:"energy-manager-em2xxem3xx",level:3},{value:"Energy Manager EM420",id:"energy-manager-em420",level:3},{value:"VARTA pulse/ pulse neo/ element (PV nur verf\xfcgbar mit PV-Sensor)",id:"varta-pulse-pulse-neo-element-pv-nur-verf\xfcgbar-mit-pv-sensor",level:2},{value:"Victron Energy",id:"victron-energy",level:2},{value:"Generische Unterst\xfctzung",id:"generische-unterst\xfctzung",level:2},{value:"manuell",id:"manuell",level:3},{value:"Hybridwechselrichter",id:"hybridwechselrichter",level:3},{value:"Volksz\xe4hler",id:"volksz\xe4hler",level:3},{value:"HTTP API",id:"http-api",level:4},{value:"HTTP API, Import &amp; Export",id:"http-api-import--export",level:4},{value:"WebSocket API",id:"websocket-api",level:4},{value:"vzlogger",id:"vzlogger",level:3},{value:"Wechselrichter",id:"wechselrichter-2",level:3},{value:"Schaltbare Steckdosen",id:"schaltbare-steckdosen",level:2},{value:"AVM FritzDECT",id:"avm-fritzdect",level:3},{value:"Homematic IP",id:"homematic-ip",level:3},{value:"myStrom Switch",id:"mystrom-switch",level:3},{value:"Shelly 1PM, EM",id:"shelly-1pm-em",level:3},{value:"Tasmota",id:"tasmota",level:3},{value:"TP-Link",id:"tp-link",level:3},{value:"H-Series Smart Plug",id:"h-series-smart-plug",level:4},{value:"Tapo P-Series Smart Plug",id:"tapo-p-series-smart-plug",level:4}],y={toc:u};function b(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hausinstallation"},"Hausinstallation"),(0,r.kt)("p",null,"Die aufgelisteten Ger\xe4te k\xf6nnen als ",(0,r.kt)("inlineCode",{parentName:"p"},"meter")," f\xfcr verschiedene Zwecke eingebunden werden. Um die Str\xf6me am Netzanschluss ",(0,r.kt)("inlineCode",{parentName:"p"},"grid")," zu erhalten, die PV Leistung ",(0,r.kt)("inlineCode",{parentName:"p"},"pv"),", die Hausbatterie ",(0,r.kt)("inlineCode",{parentName:"p"},"battery")," oder die Ladeleistung des EV ",(0,r.kt)("inlineCode",{parentName:"p"},"charge"),"."),(0,r.kt)("p",null,"In der Konfigurationsdatei gibt es hierzu den folgenden Bereich:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: grid\n    type: ...\n  - name: pv\n    type: ...\n  - name: battery\n    type: ...\n")),(0,r.kt)("p",null,"Auf dieser Seite findest du die Konfigurationen f\xfcr alle von evcc bekannterweise unterst\xfctzte Komponenten die als Energiemesspunkte (Z\xe4hler) eingebunden werden kann.\nNachdem du das Code-Beispiel f\xfcr deine Z\xe4hler angepasst und in die ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc.yaml")," \xfcbernommen hast, kannst du die Verbindung mit dem Befehl ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc meter")," testen. Dabei werden alle konfigurierten Z\xe4hler getestet. Mit dem Befehl ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc meter --name my_meter")," kann man mittels des vergebenen Namens selektiv testen."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ./evcc meter\n\ngrid\n-----\nPower:          -31W\nEnergy:         5195.5kWh\nCurrent L1..L3: 3.05A 1.07A 1.15A\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Die meisten modernen PV-Technikkomponenten, insbesondere Wechselrichter und Batteriespeicher aber auch manche Smart Meter sind mit den s.g. SunSpec-Schemata \xfcber ein standardisiertes Datenmodell via Modbus/TCP abfragbar, ohne dass man dazu auf spezielle ger\xe4tespezifische Datenregister o. \xe4. zugreifen muss. Sollten hier bekannte Systeme also nicht mit einer eigenen Konfiguration namentlich aufgef\xfchrt sein, bedeutet dies in der Regel, dass diese vollst\xe4ndig SunSpec-kompatibel sind und somit keiner ger\xe4tespezifischen Sonderkonfiguration bed\xfcrfen.")),(0,r.kt)("h2",{id:"alpha-ess-storion-smile"},"Alpha ESS Storion SMILE"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: alpha-ess-smile\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: alpha-ess-smile\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: alpha-ess-smile\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 85\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 85\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"carlo-gavazzi-em24et340"},"Carlo Gavazzi EM24/ET340"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: cg-em24\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: cg-em24\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: cg-em24\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: cg-em24\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"cfos-powerbrain-meter-"},"cFos PowerBrain Meter \ud83d\udc9a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: cfos\n    usage: charge      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 4702 # Port \n")),(0,r.kt)(m.ZP,{mdxType:"SponsorshipRequired"}),(0,r.kt)("h2",{id:"discovergy"},"Discovergy"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: discovergy\n    usage: grid\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    meter: 1ESY1161229886 \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: discovergy\n    usage: pv\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    meter: 1ESY1161229886 \n")))),(0,r.kt)("h2",{id:"dsmr"},"DSMR"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: dsmr\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 1502 # Port # Optional \n")),(0,r.kt)("h2",{id:"e3dc"},"E3DC"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: e3dc\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: e3dc\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: e3dc\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h2",{id:"eastron"},"Eastron"),(0,r.kt)("h3",{id:"sdm-630"},"SDM 630"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_meter\n    type: template\n    template: eastron      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')),(0,r.kt)("h3",{id:"sdm-72220230"},"SDM 72/220/230"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm72_220_230\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: eastron-sdm72_220_230\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: eastron-sdm72_220_230\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm72_220_230\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sdm-72v2"},"SDM 72v2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_meter\n    type: template\n    template: eastron      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')),(0,r.kt)("h2",{id:"fenecon"},"FENECON"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h2",{id:"foxess"},"FoxESS"),(0,r.kt)("h3",{id:"foxess-via-ethernet"},"FoxESS via Ethernet"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fox-ess-ethernet\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fox-ess-ethernet\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"foxess-via-rs485-modbus"},"FoxESS via RS485 Modbus"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: fox-ess-rs485\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: fox-ess-rs485\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: fox-ess-rs485\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"fronius"},"Fronius"),(0,r.kt)("h3",{id:"primo-gen24-plus"},"Primo GEN24 Plus"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h3",{id:"solar-api-v1"},"Solar API V1"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-solarapi-v1\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-solarapi-v1\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-solarapi-v1\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h3",{id:"symo-gen24-plus"},"Symo GEN24 Plus"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h2",{id:"goodwe-etehbhbt-hybrid-inverter"},"GoodWe ET/EH/BH/BT Hybrid Inverter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: goodwe-hybrid\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: goodwe-hybrid\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: goodwe-hybrid\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 247\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 247\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"growatt-hybrid-inverter"},"Growatt Hybrid Inverter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: growatt-hybrid\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: growatt-hybrid\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: growatt-hybrid\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"huawei"},"Huawei"),(0,r.kt)("h3",{id:"sun2000-via-rs485-modbus"},"SUN2000 via RS485 Modbus"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: huawei-sun2000-rs485\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')),(0,r.kt)("h3",{id:"sun2000-with-sdongle"},"SUN2000 with SDongle"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h3",{id:"sun2000-with-sdongle--power-sensor"},"SUN2000 with SDongle & Power Sensor"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: huawei-dongle-powersensor\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle-powersensor\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: huawei-dongle-powersensor\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h2",{id:"janitza-b23"},"Janitza B23"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_meter\n    type: template\n    template: janitza-b23      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')),(0,r.kt)("h2",{id:"kostal"},"Kostal"),(0,r.kt)("h3",{id:"piko-legacy"},"Piko (legacy)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-legacy\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) \n")),(0,r.kt)("h3",{id:"piko-mp-plus"},"Piko MP Plus"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-mp-plus\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")),(0,r.kt)("h3",{id:"piko-piko-ba"},"Piko, Piko BA"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-piko\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: kostal-piko\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h3",{id:"plenticore-hybrid"},"Plenticore Hybrid"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-plenticore\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: kostal-plenticore\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n")))),(0,r.kt)("h3",{id:"smart-energy-meter"},"Smart Energy Meter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h3",{id:"smart-energy-meter-\xfcber-den-wechselrichter"},"Smart Energy Meter (\xfcber den Wechselrichter)"),(0,r.kt)("p",null,"Der Z\xe4hler muss in Sensorposition 2 (Netzanschluss) installiert sein. Sensorposition 1 (Haushaltsverbrauch) wird nicht unterst\xfctzt."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem-inverter\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n")),(0,r.kt)("h2",{id:"lg-ess-home-810"},"LG ESS Home 8/10"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: lg-ess-home-8-10\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    registration: DE200... # Registriernummer des LG ESS HOME Wechselrichters. \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: lg-ess-home-8-10\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    registration: DE200... # Registriernummer des LG ESS HOME Wechselrichters. \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: lg-ess-home-8-10\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    registration: DE200... # Registriernummer des LG ESS HOME Wechselrichters. \n")))),(0,r.kt)("h2",{id:"openems"},"OpenEMS"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h2",{id:"powerdog"},"Powerdog"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: powerdog\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: powerdog\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h2",{id:"powerfox-poweropti"},"Powerfox Poweropti"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: powerfox-poweropti\n    usage: grid\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: powerfox-poweropti\n    usage: pv\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) \n")))),(0,r.kt)("h2",{id:"qcells-qhome-ess-hyb-g3"},"Qcells Q.HOME ESS HYB-G3"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"rct-power"},"RCT Power"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: rct-power\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: rct-power\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: rct-power\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h2",{id:"senec-home"},"SENEC .Home"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: senec-home\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senec-home\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: senec-home\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h2",{id:"senergy-se-456ktl-s1g2-inverter"},"Senergy SE 4/5/6KTL-S1/G2 Inverter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senergy\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"shelly-3em"},"Shelly 3EM"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: shelly-3em\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-3em\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: shelly-3em\n    usage: charge\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h2",{id:"siemens"},"Siemens"),(0,r.kt)("h3",{id:"7kt1665"},"7KT1665"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: siemens-7kt1665\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: siemens-7kt1665\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: siemens-7kt1665\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: siemens-7kt1665\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"pac-2200"},"PAC 2200"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: siemens-pac2200\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: siemens-pac2200\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: siemens-pac2200\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: siemens-pac2200\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"sma"},"SMA"),(0,r.kt)("h3",{id:"data-manager"},"Data Manager"),(0,r.kt)("p",null,'In der Weboberfl\xe4che des SMA Data Manager muss im Bereich "Externe Kommunikation" der Schalter "Modbus Server aktivieren" eingeschaltet sein.'),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-data-manager\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-data-manager\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-data-manager\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h3",{id:"energy-meter"},"Energy Meter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-energy-meter\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-energy-meter\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h3",{id:"smart-energy-hybrid-wechselrichter"},"Smart Energy Hybrid-Wechselrichter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-hybrid\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-hybrid\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"sunny-home-manager-20"},"Sunny Home Manager 2.0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-home-manager\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")),(0,r.kt)("h3",{id:"wechselrichter"},"Wechselrichter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-inverter\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort f\xfcr Benutzergruppe Benutzer # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-inverter\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort f\xfcr Benutzergruppe Benutzer # Optional \n")))),(0,r.kt)("h2",{id:"solaredge"},"SolarEdge"),(0,r.kt)("h3",{id:"hybrid-inverter"},"Hybrid Inverter"),(0,r.kt)("p",null,"Nur ein System kann und darf auf den Wechselrichter zugreifen!"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solaredge-hybrid\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solaredge-hybrid\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solaredge-hybrid\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n')))),(0,r.kt)("h3",{id:"wechselrichter-1"},"Wechselrichter"),(0,r.kt)("p",null,"Nur ein System kann und darf auf den Wechselrichter zugreifen!"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solaredge-inverter\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solaredge-inverter\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n')))),(0,r.kt)("h2",{id:"solarlog"},"Solarlog"),(0,r.kt)("p",null,"Wir empfehlen dieses Ger\xe4t f\xfcr den Netzbezug/Einspeisewerte nur zu verwenden, wenn kein anderes Ger\xe4t diese Daten liefert.\nFalls eine Hausbatterie angeschlossen ist sollte dieses Ger\xe4t auf keinen Fall f\xfcr die erw\xe4hnten Werte verwendet werden!"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarlog\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarlog\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h2",{id:"solarmax"},"SolarMax"),(0,r.kt)("h3",{id:"maxstorage--maxstorage-ultimate"},"MAX.STORAGE / MAX.STORAGE Ultimate"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarmax-maxstorage\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarmax-maxstorage\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarmax-maxstorage\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"sp-series-inverter"},"SP Series Inverter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senergy\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,r.kt)("h2",{id:"solarwatt"},"Solarwatt"),(0,r.kt)("h3",{id:"energymanager-energymanager-pro"},"EnergyManager, EnergyManager Pro"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h3",{id:"myreserve"},"MyReserve"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h3",{id:"myreserve-matrix-lan-oder-powergateway"},"MyReserve Matrix (LAN oder PowerGateway)"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n")))),(0,r.kt)("h2",{id:"solax"},"Solax"),(0,r.kt)("h3",{id:"hybrid-x1x3-g3g4"},"Hybrid X1/X3 G3/G4"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 19200 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"hybrid-wechselrichter-cloud"},"Hybrid-Wechselrichter (Cloud)"),(0,r.kt)("p",null,"Der Solax Hybrid-Wechselrichter muss in der SolaxCloud angemeldet sein."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Achtung"),": Die Werte k\xf6nnen nur alle 150s abgerufen werden und dann auch 5 Minuten alt sein. Die Laderegelung nach PV kann hiermit nicht optimal gesteuert werden! Nur als Notfalloption nutzen wenn kein lokaler Zugriff m\xf6glich ist."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax-hybrid-cloud\n    usage: grid\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax-hybrid-cloud\n    usage: pv\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax-hybrid-cloud\n    usage: battery\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n')))),(0,r.kt)("h3",{id:"pv-wechselrichter-cloud"},"PV-Wechselrichter (Cloud)"),(0,r.kt)("p",null,"Der Solax PV-Wechselrichter muss in der SolaxCloud angemeldet sein."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Achtung"),": Die Werte k\xf6nnen nur alle 150s abgerufen werden und dann auch 5 Minuten alt sein. Die Laderegelung nach PV kann hiermit nicht optimal gesteuert werden! Nur als Notfalloption nutzen wenn kein lokaler Zugriff m\xf6glich ist."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solax-inverter-cloud\n    usage: pv\n    tokenid: # ObtaintokenID von https://www.solaxcloud.com/#/api verwenden.\n    serial: # Registriernummer von https://www.solaxcloud.com/#/inverter verwenden. \n")),(0,r.kt)("h2",{id:"sonnen-sonnenbatterie"},"Sonnen sonnenBatterie"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sonnenbatterie\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sonnenbatterie\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sonnenbatterie\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n")))),(0,r.kt)("h2",{id:"sungrow"},"Sungrow"),(0,r.kt)("h3",{id:"sg-series-inverter"},"SG Series Inverter"),(0,r.kt)("p",null,"Die Verbindung ist nur seriell (RS485) oder TCP (mit dem WiNet-S-Dongle) m\xf6glich."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sungrow-inverter\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sungrow-inverter\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h3",{id:"sh-series-hybrid-inverter"},"SH Series Hybrid Inverter"),(0,r.kt)("p",null,"Die Verbindung ist nur seriell (RS485) oder TCP (mit dem WiNet-S-Dongle) m\xf6glich."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sungrow-hybrid\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sungrow-hybrid\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sungrow-hybrid\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,r.kt)("h2",{id:"tesla-powerwall"},"Tesla Powerwall"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: tesla-powerwall\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort des Benutzers "Kunde" \n'))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: tesla-powerwall\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort des Benutzers "Kunde" \n'))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: tesla-powerwall\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort des Benutzers "Kunde" \n')))),(0,r.kt)("h2",{id:"tibber-pulse"},"Tibber Pulse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tibber-pulse\n    usage: grid\n    token: 5K4MVS-OjfWhK_4yrjOlFe1F6kJXPVf7eQYggo8ebAE\n    homeid: 96a14971-525a-4420-aae9-e5aedaa129ff # Optional \n")),(0,r.kt)("h2",{id:"tq"},"TQ"),(0,r.kt)("h3",{id:"energy-manager-em2xxem3xx"},"Energy Manager EM2xx/EM3xx"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tq-em\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 80 # Port # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n")),(0,r.kt)("h3",{id:"energy-manager-em420"},"Energy Manager EM420"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tq-em420\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 80 # Port # Optional\n    device: local # JSON-Schnittstelle -> Datenendpunkt # Optional\n    token: ey... # Token des EM420 (Erstellen unter Profil -> Zugangsschl\xfcssel) \n")),(0,r.kt)("h2",{id:"varta-pulse-pulse-neo-element-pv-nur-verf\xfcgbar-mit-pv-sensor"},"VARTA pulse/ pulse neo/ element (PV nur verf\xfcgbar mit PV-Sensor)"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: varta\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: varta\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: varta\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h2",{id:"victron-energy"},"Victron Energy"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: victron-energy\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: victron-energy\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: victron-energy\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,r.kt)("h2",{id:"generische-unterst\xfctzung"},"Generische Unterst\xfctzung"),(0,r.kt)("h3",{id:"manuell"},"manuell"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_meter\n    type: custom\n    power: # power (W)\n      source: # plugin type\n      # ...\n    energy: # optional energy (kWh)\n      source: # plugin type\n      # ...\n    soc: # optional battery soc (%)\n      source: # plugin type\n      # ...\n    currents: # optional currents (A)\n      - source: # L1 plugin type\n        # ...\n      - source: # L2 plugin type\n        # ...\n      - source: # L3 plugin type\n        # ...\n")),(0,r.kt)("h3",{id:"hybridwechselrichter"},"Hybridwechselrichter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sunspec-hybrid\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sunspec-hybrid\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sunspec-hybrid\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h3",{id:"volksz\xe4hler"},"Volksz\xe4hler"),(0,r.kt)("h4",{id:"http-api"},"HTTP API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-http\n    usage: grid\n    url: # Beispiel: http://zaehler.network.local:8080/api/data # Optional\n    uuid: \n")),(0,r.kt)("h4",{id:"http-api-import--export"},"HTTP API, Import & Export"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-importexport\n    usage: grid\n    url: # Die URL ist zum Beispiel: http://zaehler.network.local:8080/api/data # Optional\n    importuuid:\n    exportuuid: \n")),(0,r.kt)("h4",{id:"websocket-api"},"WebSocket API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-ws\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8082 # Port # Optional\n    uuid: \n")),(0,r.kt)("h3",{id:"vzlogger"},"vzlogger"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: vzlogger\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8081 # Port # Optional\n    uuid: \n")),(0,r.kt)("h3",{id:"wechselrichter-2"},"Wechselrichter"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sunspec-inverter\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sunspec-inverter\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,r.kt)("h2",{id:"schaltbare-steckdosen"},"Schaltbare Steckdosen"),(0,r.kt)("h3",{id:"avm-fritzdect"},"AVM FritzDECT"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fritzdect\n    usage: pv\n    uri: https://fritz.box # Optional\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    ain: 307788992233 # Die AIN ist auf dem Typenschild auf der Ger\xe4ter\xfcckseite aufgedruckt. Bei f\xfchrenden Nullen bitte in doppelte Hochkommata setzen. \n"))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: fritzdect\n    usage: charge\n    uri: https://fritz.box # Optional\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    ain: 307788992233 # Die AIN ist auf dem Typenschild auf der Ger\xe4ter\xfcckseite aufgedruckt. Bei f\xfchrenden Nullen bitte in doppelte Hochkommata setzen. \n")))),(0,r.kt)("h3",{id:"homematic-ip"},"Homematic IP"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: homematic\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    device: '0001EE89AAD848' # Homematic Ger\xe4te Id, wie im CCU Webfrontend angezeigt.\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.) # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: homematic\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    device: '0001EE89AAD848' # Homematic Ger\xe4te Id, wie im CCU Webfrontend angezeigt.\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.) # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n"))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: homematic\n    usage: charge\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    device: '0001EE89AAD848' # Homematic Ger\xe4te Id, wie im CCU Webfrontend angezeigt.\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.) # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n")))),(0,r.kt)("h3",{id:"mystrom-switch"},"myStrom Switch"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: mystrom\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,r.kt)(l.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: mystrom\n    usage: charge\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,r.kt)("h3",{id:"shelly-1pm-em"},"Shelly 1PM, EM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-1pm\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.) # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional\n    channel: 0 # Optional \n")),(0,r.kt)("h3",{id:"tasmota"},"Tasmota"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tasmota\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Standard-User ist admin # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n"))),(0,r.kt)(l.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tasmota\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Standard-User ist admin # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n"))),(0,r.kt)(l.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: tasmota\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Standard-User ist admin # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n")))),(0,r.kt)("h3",{id:"tp-link"},"TP-Link"),(0,r.kt)("h4",{id:"h-series-smart-plug"},"H-Series Smart Plug"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tplink\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")),(0,r.kt)("h4",{id:"tapo-p-series-smart-plug"},"Tapo P-Series Smart Plug"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tapo\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) \n")))}b.isMDXComponent=!0}}]);