"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[9576],{5162:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294),r=t(6010);const i="tabItem_Ymn6";function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>p});var a=t(7462),r=t(7294),i=t(6010),o=t(2389),l=t(7392),c=t(7094),s=t(2466);const d="tabList__CuJ",m="tabItem_LNqP";function u(e){const{lazy:n,block:t,defaultValue:o,values:u,groupId:p,className:k}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??h.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),v=(0,l.l)(g,((e,n)=>e.value===n.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===o?o:o??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==N&&!g.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:b}=(0,c.U)(),[y,w]=(0,r.useState)(N),C=[],{blockElementScrollPositionUntilNextRender:D}=(0,s.o5)();if(null!=p){const e=f[p];null!=e&&e!==y&&g.some((n=>n.value===e))&&w(e)}const S=e=>{const n=e.currentTarget,t=C.indexOf(n),a=g[t].value;a!==y&&(D(n),w(a),null!=p&&b(p,String(a)))},E=e=>{let n=null;switch(e.key){case"Enter":S(e);break;case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}n?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},k)},g.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:e=>C.push(e),onKeyDown:E,onClick:S},o,{className:(0,i.Z)("tabs__item",m,o?.className,{"tabs__item--active":y===n})}),t??n)}))),n?(0,r.cloneElement)(h.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function p(e){const n=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(n)},e))}},9987:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var a=t(7462),r=(t(7294),t(3905)),i=(t(828),t(5488)),o=t(5162);const l={sidebar_position:4},c="Docker",s={unversionedId:"installation/docker",id:"installation/docker",title:"Docker",description:"evcc kann auch als Docker Image installiert werden. Das funktioniert auch mit verbreiteten NAS-Systemen wie etwa Synology.",source:"@site/docs/installation/docker.mdx",sourceDirName:"installation",slug:"/installation/docker",permalink:"/docs/installation/docker",draft:!1,editUrl:"https://github.com/evcc-io/docs/tree/main/docs/installation/docker.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"macOS",permalink:"/docs/installation/macos"},next:{title:"Manuell (inkl. Windows) und Upgrade/Downgrade",permalink:"/docs/installation/manual"}},d={},m=[{value:"Konfiguration",id:"konfiguration",level:2},{value:"Docker Installation",id:"docker-installation",level:2},{value:"Manuell",id:"manuell",level:3},{value:"Mit docker-compose",id:"mit-docker-compose",level:3},{value:"Testen",id:"testen",level:2},{value:"Aktualisierung",id:"aktualisierung",level:2},{value:"Synology NAS",id:"synology-nas",level:3}],u={toc:m};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker"},"Docker"),(0,r.kt)("p",null,"evcc kann auch als Docker Image installiert werden. Das funktioniert auch mit verbreiteten NAS-Systemen wie etwa Synology."),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"Die Verwendung von Docker erfordert fortgeschrittene System-Kenntnisse (Linux, macOS UND Docker)!\nF\xfcr Einsteiger ist es wirklich nicht empfehlenswert mit einer Installation in einer Docker-Umgebung zu starten!")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Manche Ger\xe4te und Kommunikationswege werden ohne spezielle Docker-Konfigurationsoptionen nicht fehlerfrei funktionieren.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Es ist sinnvoll die gesamte Konfiguration zun\xe4chst ohne Docker-Umgebung nativ auf dem Zielsystem zu testen um grundlegende Fehler in der evcc-Konfiguration und Probleme mit der angebundenen Infrastruktur auszuschlie\xdfen.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Momentan werden nur die CPU Architekturen AMD64, armv6 und arm64 in Docker Images unterst\xfctzt!"),(0,r.kt)("p",{parentName:"admonition"},"Diese Dokumentation ist f\xfcr Docker und Synology. Bei Verwendung anderer Systeme k\xf6nnen sich Details unterscheiden.")),(0,r.kt)("h2",{id:"konfiguration"},"Konfiguration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Es wird eine ",(0,r.kt)("strong",{parentName:"p"},"funktionierende")," evcc Konfiguration ben\xf6tigt. F\xfchre dazu die Schritte auf einem der folgende Systeme durch:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"linux"},"Debian, Ubuntu, Raspberry Pi")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"macos"},"macOS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"manual"},"Manuell (inkl. Windows)"))),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Wir empfehlen dies wenn m\xf6glich auf dem gleichen System durchzuf\xfchren auf welchem ",(0,r.kt)("strong",{parentName:"p"},"evcc")," sp\xe4ter auch im Docker Container laufen soll"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Kopiere die damit erzeugte Datei ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc.yaml")," in das Verzeichnis ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc")," auf dem System auf welchem Docker l\xe4uft.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Erstelle ein lokales Verzeichnis (bspw. ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.evcc"),") in dem evcc's interne SQLite Datenbank ",(0,r.kt)("inlineCode",{parentName:"p"},"/root/.evcc")," abgelegt werden kann."))),(0,r.kt)("h2",{id:"docker-installation"},"Docker Installation"),(0,r.kt)("p",null,"Der Docker Container kann entweder manuell \xfcber einen Befehl in der Kommandozeile erstellt werden, oder \xfcber eine ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," Datei. Wem letzteres nichts sagt, f\xfchrt die Schritte unter ",(0,r.kt)("em",{parentName:"p"},"Manuell")," aus."),(0,r.kt)("h3",{id:"manuell"},"Manuell"),(0,r.kt)("p",null,"Installiere den Docker Container der zu deiner Komponenten-Konstellation passt mit einem der folgenden Befehle:"),(0,r.kt)(i.Z,{groupId:"docker",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"default",label:"Standard",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker run \\\n-d \\\n--name evcc \\\n-v $(pwd)/evcc.yaml:/etc/evcc.yaml \\\n-v $(pwd)/.evcc:/root/.evcc \\\n-p 7070:7070 \\\n-p 8887:8887 \\\n-p 7090:7090/udp \\\n-p 9522:9522/udp \\\nevcc/evcc:latest\n"))),(0,r.kt)(o.Z,{value:"sma",label:"SMA Ger\xe4te und EEBus",mdxType:"TabItem"},"F\xfcr die Verwendung des SMA Sunny Home Manger 2.0 muss evcc eine eindeutige Ger\xe4te-ID erstellen. Unter Linux wird ",(0,r.kt)("i",null,"machine-id")," verwendet. Diese muss daf\xfcr in den Container gemounted werden. Zus\xe4tzlicher Paramter:",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--network host\n-v /etc/machine-id:/etc/machine-id \\\n")),(0,r.kt)("p",null,"Alternativ kann in der ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc.yaml")," auch eine eindeutige Ger\xe4te-ID unter ",(0,r.kt)("inlineCode",{parentName:"p"},"plant")," konfiguriert werden."))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Mit ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc/evcc:latest")," bekommt man die jeweils aktuelle Version. (Empfohlen)",(0,r.kt)("br",{parentName:"p"}),"\n","Mit ",(0,r.kt)("inlineCode",{parentName:"p"},"evcc/evcc:nightly")," bekommt man einen t\xe4glich aktualisierten Build, der nicht so gut getestet sein kann.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Unter Linux ist es evtl. notwendig den Befehl mit ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo")," zu beginnen!")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Durch die ",(0,r.kt)("inlineCode",{parentName:"p"},"-d"),"-Option wird der evcc Container beim Stoppen automatisch gel\xf6scht und muss danach durch einen der ",(0,r.kt)("inlineCode",{parentName:"p"},"docker run ...")," Befehle oben wieder angelegt/gestartet werden.")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Mounte nicht das lokale Verzeichnis ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc")," als Volume in Docker!")),(0,r.kt)("h3",{id:"mit-docker-compose"},"Mit ",(0,r.kt)("a",{parentName:"h3",href:"https://docs.docker.com/compose"},"docker-compose")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose"},"docker-compose")," hat einige Vorteile gegen\xfcber der direkten Ausf\xfchrung in der Kommandozeile, z.B. falls man weitere Programme wie Traefik in Verbindung mit evcc nutzen m\xf6chte.",(0,r.kt)("br",{parentName:"p"}),"\n","Im aktiven Verzeichnis legt man dazu einfach eine Konfigurationsdatei mit dem Namen ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," an.",(0,r.kt)("br",{parentName:"p"}),"\n","Entsprechend der passenden Komponenten-Konstellation kopiert man eine der folgenden Konfigurationen in die ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," und speichert diese ab:"),(0,r.kt)(i.Z,{groupId:"docker",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"default",label:"Standard",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'version: "3"\nservices:\n  evcc:\n    command:\n      - evcc\n    container_name: evcc\n    image: evcc/evcc:latest\n    ports:\n      - 7070:7070/tcp\n      - 8887:8887/tcp\n      - 7090:7090/udp\n      - 9522:9522/udp\n    volumes:\n      - /etc/evcc.yaml:/etc/evcc.yaml\n      - /home/[user]/.evcc:/root/.evcc\n    restart: unless-stopped\n'))),(0,r.kt)(o.Z,{value:"sma",label:"SMA Ger\xe4te und EEBus",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"   network_mode: host\n   volumes:\n      - /etc/machine-id:/etc/machine-id\n      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id\n")))),(0,r.kt)("p",null,"Starte den Container mit:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker-compose up -d\n")),(0,r.kt)("h2",{id:"testen"},"Testen"),(0,r.kt)("p",null,"Pr\xfcfe die Docker Installation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Zeige die laufenden docker Container an:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker ps -a\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pr\xfcfe die log Ausgaben des evcc Containers:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker logs evcc\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pr\xfcfe die evcc Meter-Konfiguration des evcc Containers:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker exec evcc evcc -l debug meter\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pr\xfcfe die evcc Charger-Konfiguration des evcc Containers:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker exec evcc evcc -l debug charger\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pr\xfcfe die evcc Vehicle-Konfiguration des evcc Containers:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker exec evcc evcc -l debug vehicle\n")))),(0,r.kt)("p",null,"\xd6ffne einen Browser und gibt die folgende URL ein: ",(0,r.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:7070")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Ersetze ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," mit der IP Adresse oder dem Hostnamen des Computers, falls der Browser nicht auf dem gleichen Computer ge\xf6ffnet wurde.")),(0,r.kt)("h2",{id:"aktualisierung"},"Aktualisierung"),(0,r.kt)("p",null,"Um auf eine neue Version von evcc zu aktualisieren, f\xfchre folgende Schritte durch:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\xd6ffne ein Terminal/Eingabeaufforderung")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Aktualisiere auf das neuste evcc Image:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker pull evcc/evcc:latest\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Stoppe den evcc Container:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker stop evcc\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"L\xf6sche den evcc Container:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker rm evcc\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Starte den evcc Container mit dem aktualiserten Image:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo docker-compose up -d\n")))),(0,r.kt)("h3",{id:"synology-nas"},"Synology NAS"),(0,r.kt)("p",null,"Die Einrichtung von evcc \xfcber Docker auf einem Synology NAS-System ist \xfcber dessen grafische Benutzeroberfl\xe4che ohne Verwendung der Kommandozeile m\xf6glich.\nHierbei sind zwei Netzwerkmodi w\xe4hlbar: Host oder Bridge. Ob der Bridge-Modus anwendbar ist h\xe4ngt von den verwendeten Komponenten ab.\nIm Zweifelsfall ist immer der Host-Mode zu w\xe4hlen. Hier die Anleitung dazu:\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/evcc-io/docs/files/10365841/Anleitung.EVCC.Synology.Docker.Elli.Charger.Connect-Pro.pdf"},"Anleitung.EVCC.Synology.Docker.Elli.Charger.Connect-Pro.pdf")),(0,r.kt)("p",null,"F\xfcr den Bridge-Mode ist nach dieser Anleitung zu verfahren: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/evcc-io/docs/files/10365845/EVCC_Synology_Docker-2.pdf"},"EVCC_Synology_Docker-2.pdf")," (erstellt von at4hawo1)"))}p.isMDXComponent=!0}}]);